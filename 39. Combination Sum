At the time of backtracking
class Solution {
    void helper(int idx, int target,vector<int>&arr,vector<vector<int>> &ans,vector<int> &ds){
        if(idx==arr.size()){
            if(target==0){
                ans.push_back(ds);
            }
            return;
        }
        if(arr[idx]<=target){
            ds.push_back(arr[idx]);
             helper(idx,target-arr[idx],arr,ans,ds);
            ds.pop_back();
        }
            helper(idx+1,target,arr,ans,ds);
        
    }
public:
    vector<vector<int>> combinationSum(vector<int>& arr, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
         helper(0,target,arr,ans,ds);

        return ans;
    }
};
