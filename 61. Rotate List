/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode helper(ListNode temp, int k){
        int ctn = 1;
        while(temp!=null){
        if(ctn ==k) return temp;
        ctn++;
        temp = temp.next;
        }
        return temp;
    }
    public ListNode rotateRight(ListNode head, int k) {
       if(head==null || k==0) return head;
       ListNode tail = head;
       int len = 1;
       while(tail.next!=null){
        tail = tail.next;
        len+=1;
       }
            if(k%len==0) return head;
            k = k%len;
            tail.next = head;
            ListNode newNode = helper(head, len-k);
            head = newNode.next;
            newNode.next = null;
            return head; 
    }
}
TC=O(n)
SC=O(n)
